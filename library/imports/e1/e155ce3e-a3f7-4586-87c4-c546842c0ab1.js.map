{"version":3,"sources":["../../../../assets/script/assets/script/Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","type","AudioClip","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","onLoad","jumpAction","node","runAction","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","onDestroy","off","start","update","dt","Math","abs","x"],"mappings":"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","file":"Player.js","sourceRoot":"../../../../assets/script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    // 主角跳跃高度\n    jumpHeight: 0,\n    // 主角跳跃持续时间\n    jumpDuration: 0,\n    // 最大移动速度\n    maxMoveSpeed: 0,\n    // 加速度\n    accel: 0,\n    jumpAudio: {\n      default: null,\n      type: cc.AudioClip\n    }\n  },\n  // func 上下运动\n  setJumpAction: function() {\n    // 跳跃上升\n    var jumpUp = cc\n      .moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight))\n      .easing(cc.easeCubicActionOut());\n    // 下落\n    var jumpDown = cc\n      .moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight))\n      .easing(cc.easeCubicActionIn());\n    // 添加回调函数，用于在指定动作结束时调用\n    var callback = cc.callFunc(this.playJumpSound, this);\n    // 不断重复\n    return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\n  },\n  // func 调用声音引擎播放声音\n  playJumpSound: function() {\n    cc.audioEngine.playEffect(this.jumpAudio, false);\n  },\n  // func 键盘事件\n  onKeyDown(event) {\n    switch (event.keyCode) {\n      case cc.macro.KEY.a:\n        this.accLeft = true;\n        break;\n      case cc.macro.KEY.d:\n        this.accRight = true;\n        break;\n    }\n  },\n  onKeyUp(event) {\n    switch (event.keyCode) {\n      case cc.macro.KEY.a:\n        this.accLeft = false;\n        break;\n      case cc.macro.KEY.d:\n        this.accRight = false;\n        break;\n    }\n  },\n  // LIFE-CYCLE CALLBACKS:\n\n  onLoad() {\n    // 初始化跳跃动作\n    this.jumpAction = this.setJumpAction();\n    this.node.runAction(this.jumpAction);\n\n    // 加速度方向开关\n    this.accLeft = false;\n    this.accRight = false;\n    // 主角当前水平方向速度\n    this.xSpeed = 0;\n\n    // 初始化键盘输入监听\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n  },\n  onDestroy() {\n    // 取消键盘输入监听\n    cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n    cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n  },\n\n  start() {},\n\n  update(dt) {\n    // 根据当前加速度方向每帧更新速度\n    if (this.accLeft) {\n      this.xSpeed -= this.accel * dt;\n    } else if (this.accRight) {\n      this.xSpeed += this.accel * dt;\n    }\n    // 限制主角的速度不能超过最大值\n    if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\n      this.xSpeed = (this.maxMoveSpeed * this.xSpeed) / Math.abs(this.xSpeed);\n    }\n\n    // 根据当前速度更新主角的位置\n    this.node.x += this.xSpeed * dt;\n  }\n});\n"]}