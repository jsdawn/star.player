{"version":3,"sources":["Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","onPicked","spawnNewStar","gainScore","destroy","start","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY;AACV;AACAC,gBAAY;AAFF,GAHL;;AAQP;AACAC,qBAAmB,6BAAW;AAC5B;AACA,QAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,QAAIC,OAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,WAAOJ,IAAP;AACD,GAfM;;AAiBP;AACAK,YAAU,oBAAW;AACnB;AACA,SAAKR,IAAL,CAAUS,YAAV;AACA;AACA,SAAKT,IAAL,CAAUU,SAAV;AACA;AACA,SAAKN,IAAL,CAAUO,OAAV;AACD,GAzBM;;AA2BP;;AAEA;;AAEAC,OA/BO,mBA+BC,CAAE,CA/BH;AAiCPC,QAjCO,kBAiCAC,EAjCA,EAiCI;AACT;AACA,QAAI,KAAKhB,iBAAL,KAA2B,KAAKD,UAApC,EAAgD;AAC9C;AACA,WAAKW,QAAL;AACA;AACD;AACD;AACA,QAAIO,eAAe,IAAI,KAAKf,IAAL,CAAUgB,KAAV,GAAkB,KAAKhB,IAAL,CAAUiB,YAAnD;AACA,QAAIC,aAAa,EAAjB;AACA,SAAKd,IAAL,CAAUe,OAAV,GACED,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CADf;AAED;AA7CM,CAAT","file":"Star.js","sourceRoot":"../../../../assets/script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    // 星星和主角之间的距离小于这个数值时，就会完成收集\n    pickRadius: 0\n  },\n\n  // func 计算星星与 player的距离\n  getPlayerDistance: function() {\n    // 根据 player 节点位置判断距离\n    var playerPos = this.game.player.getPosition();\n    // 根据两点位置计算两点之间距离\n    var dist = this.node.position.sub(playerPos).mag();\n    return dist;\n  },\n\n  // func 星星被收集\n  onPicked: function() {\n    // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\n    this.game.spawnNewStar();\n    // 电泳 Game 中的得分func\n    this.game.gainScore();\n    // 然后销毁当前星星节点\n    this.node.destroy();\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  // onLoad () {},\n\n  start() {},\n\n  update(dt) {\n    // 每帧判断和player之间的距离是否小于收集距离\n    if (this.getPlayerDistance() < this.pickRadius) {\n      // 调用收集行为\n      this.onPicked();\n      return;\n    }\n    // 根据 Game 脚本中的计时器更新星星的透明度\n    var opacityRatio = 1 - this.game.timer / this.game.starDuration;\n    var minOpacity = 50;\n    this.node.opacity =\n      minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n  }\n});\n"]}