{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","onLoad","timer","starDuration","groundY","y","height","spawnNewStar","score","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","Math","random","randX","randY","jumpHeight","maxX","width","v2","gainScore","string","gameOver","stopAllActions","director","loadScene","start","update","dt"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY;AACV;AACAC,gBAAY;AACVC,eAAS,IADC;AAEVC,YAAMP,GAAGQ;AAFC,KAFF;AAMV;AACAC,qBAAiB,CAPP;AAQVC,qBAAiB,CARP;AASV;AACAC,YAAQ;AACNL,eAAS,IADH;AAENC,YAAMP,GAAGY;AAFH,KAVE;AAcV;AACAC,YAAQ;AACNP,eAAS,IADH;AAENC,YAAMP,GAAGY;AAFH,KAfE;AAmBV;AACAE,kBAAc;AACZR,eAAS,IADG;AAEZC,YAAMP,GAAGe;AAFG;AApBJ,GAHL;;AA6BPC,UAAQ,kBAAW;AACjB;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA;AACA,SAAKC,OAAL,GAAe,KAAKR,MAAL,CAAYS,CAAZ,GAAgB,KAAKT,MAAL,CAAYU,MAAZ,GAAqB,CAApD;AACA;AACA,SAAKC,YAAL;AACA;AACA,SAAKC,KAAL,GAAa,CAAb;AACD,GAvCM;;AAyCP;AACAD,gBAAc,wBAAW;AACvB;AACA,QAAIE,UAAUxB,GAAGyB,WAAH,CAAe,KAAKpB,UAApB,CAAd;AACA;AACA,SAAKqB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,YAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACA;AACAL,YAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACA;AACA,SAAKb,YAAL,GACE,KAAKR,eAAL,GACAsB,KAAKC,MAAL,MAAiB,KAAKxB,eAAL,GAAuB,KAAKC,eAA7C,CAFF;AAGA,SAAKO,KAAL,GAAa,CAAb;AACD,GAxDM;AAyDP;AACAY,sBAAoB,8BAAW;AAC7B,QAAIK,QAAQ,CAAZ;AACA;AACA,QAAIC,QACF,KAAKhB,OAAL,GACAa,KAAKC,MAAL,KAAgB,KAAKpB,MAAL,CAAYiB,YAAZ,CAAyB,QAAzB,EAAmCM,UADnD,GAEA,EAHF;AAIA;AACA,QAAIC,OAAO,KAAKX,IAAL,CAAUY,KAAV,GAAkB,CAA7B;AACAJ,YAAQ,CAACF,KAAKC,MAAL,KAAgB,GAAjB,IAAwB,CAAxB,GAA4BI,IAApC;AACA;AACA,WAAOrC,GAAGuC,EAAH,CAAML,KAAN,EAAaC,KAAb,CAAP;AACD,GAtEM;AAuEP;AACAK,aAAW,qBAAW;AACpB,SAAKjB,KAAL,IAAc,CAAd;AACA;AACA,SAAKT,YAAL,CAAkB2B,MAAlB,GAA2B,YAAY,KAAKlB,KAA5C;AACD,GA5EM;AA6EP;AACAmB,YAAU,oBAAW;AACnB,SAAK7B,MAAL,CAAY8B,cAAZ;AACA3C,OAAG4C,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACD,GAjFM;;AAmFPC,OAnFO,mBAmFC,CAAE,CAnFH;AAqFPC,QArFO,kBAqFAC,EArFA,EAqFI;AACT;AACA;AACA,QAAI,KAAK/B,KAAL,GAAa,KAAKC,YAAtB,EAAoC;AAClC,WAAKwB,QAAL;AACA;AACD;AACD,SAAKzB,KAAL,IAAc+B,EAAd;AACD;AA7FM,CAAT","file":"Game.js","sourceRoot":"../../../../assets/script","sourcesContent":["cc.Class({\n  extends: cc.Component,\n\n  properties: {\n    // 这个属性引用了星星预制资源\n    starPrefab: {\n      default: null,\n      type: cc.Prefab\n    },\n    // 星星产生后消失时间的随机范围\n    maxStarDuration: 0,\n    minStarDuration: 0,\n    // 地面节点，用于确定星星生成的高度\n    ground: {\n      default: null,\n      type: cc.Node\n    },\n    // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n    player: {\n      default: null,\n      type: cc.Node\n    },\n    // score label 的引用\n    scoreDisplay: {\n      default: null,\n      type: cc.Label\n    }\n  },\n\n  onLoad: function() {\n    // 变量 计时器\n    this.timer = 0;\n    this.starDuration = 0;\n    // 获取地平面的 y 轴坐标\n    this.groundY = this.ground.y + this.ground.height / 2;\n    // 生成一个新的星星\n    this.spawnNewStar();\n    // 初始化计分\n    this.score = 0;\n  },\n\n  // func 生成星星\n  spawnNewStar: function() {\n    // 使用给定的模板在场景中生成一个新节点\n    var newStar = cc.instantiate(this.starPrefab);\n    // 将新增的节点添加到 Canvas 节点下面\n    this.node.addChild(newStar);\n    // 为星星设置一个随机位置\n    newStar.setPosition(this.getNewStarPosition());\n    // 在星星组件上暂存 Game 对象的引用\n    newStar.getComponent('Star').game = this;\n    // 重置计时器，根据消失时间范围随机取一个值\n    this.starDuration =\n      this.minStarDuration +\n      Math.random() * (this.maxStarDuration - this.minStarDuration);\n    this.timer = 0;\n  },\n  // func 获取星星随机位置\n  getNewStarPosition: function() {\n    var randX = 0;\n    // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n    var randY =\n      this.groundY +\n      Math.random() * this.player.getComponent('Player').jumpHeight +\n      50;\n    // 根据屏幕宽度，随机得到一个星星 x 坐标d\n    var maxX = this.node.width / 2;\n    randX = (Math.random() - 0.5) * 2 * maxX;\n    // 返回星星坐标\n    return cc.v2(randX, randY);\n  },\n  // func 计分+1\n  gainScore: function() {\n    this.score += 1;\n    // 更新 label 节点文字\n    this.scoreDisplay.string = 'Score: ' + this.score;\n  },\n  // func 游戏失败\n  gameOver: function() {\n    this.player.stopAllActions();\n    cc.director.loadScene('game');\n  },\n\n  start() {},\n\n  update(dt) {\n    // 每帧更新计时器，超过限度还没有生成新的星星\n    // 就会调用游戏失败逻辑\n    if (this.timer > this.starDuration) {\n      this.gameOver();\n      return;\n    }\n    this.timer += dt;\n  }\n});\n"]}